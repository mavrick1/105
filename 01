from time import time

def merge(arr, left, middle, right):
    n1 = middle - left + 1
    n2 = right - middle

    L = []
    R = []

    for i in range(0, n1):
        L.append(0)

    for j in range(0, n2):
        R.append(0)

    for i in range(0, n1):
        L[i] = arr[left + i]

    for j in range(0, n2):
        R[j] = arr[middle + 1 + j]

    i = j = 0
    k = left

    while i < n1 and j < n2:
        if L[i] <= R[j]:
            arr[k] = L[i]
            i += 1
        else:
            arr[k] = R[j]
            j += 1
        k += 1

    while i < n1:
        arr[k] = L[i]
        i += 1
        k += 1

    while j < n2:
        arr[k] = R[j]
        j += 1
        k += 1


def mergeSort(arr, left, right):
    if left < right:
        middle = (left + (right - 1)) // 2

        mergeSort(arr, left, middle)
        mergeSort(arr, middle + 1, right)
        merge(arr, left, middle, right)


arr = []
cont = 'Y'

while cont.upper() == 'Y':
    data = int(input('Enter the element: '))
    arr.append(data)
    cont = input('Continue? (Y/N): ')

n = len(arr)

print('Given array is:')
for i in range(n):
    print(arr[i])

start_time = time()

mergeSort(arr, 0, n - 1)

end_time = time()
elapsed = end_time - start_time

print("\n\nSorted array is:")
for i in range(n):
    print(arr[i])

print('Execution time =', elapsed)

Enter the element: 2
Continue? (Y/N): Y
Enter the element: 4
Continue? (Y/N): Y
Enter the element: 3
Continue? (Y/N): Y
Enter the element: 7
Continue? (Y/N): Y
Enter the element: 6
Continue? (Y/N): Y
Enter the element: 9
Continue? (Y/N): N
